{"remainingRequest":"/node/src/code-factory/node_modules/babel-loader/lib/index.js!/node/src/code-factory/lsrkyyezwbvy/src/mixins/action.js","dependencies":[{"path":"/node/src/code-factory/lsrkyyezwbvy/src/mixins/action.js","mtime":1649314959952},{"path":"/node/src/code-factory/lsrkyyezwbvy/babel.config.js","mtime":1649314958358},{"path":"/node/src/code-factory/node_modules/cache-loader/dist/cjs.js","mtime":1648824486287},{"path":"/node/src/code-factory/node_modules/babel-loader/lib/index.js","mtime":1648824338096}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/node/src/code-factory/lsrkyyezwbvy/src/mixins/action.js"],"names":["data","paramJson","globalVariableList","timer","option","computed","isWeb","document","body","clientWidth","isH5","customStyle","uuid","classStyle","obj","classNames","JSON","parse","stringify","controlProperties","className","pcClass","reverse","forEach","item","mClass","methods","validate","list","validateList","getValidateList","$children","filter","includes","prop","flag","length","tiggerValidate","resultList","$options","name","push","setControlVal","val","baseType","type","value","map","join","e","title","showFn","status","$scoped","defaultFlag","display","console","log","conditionJudge","displayCondition","jude","$set","getControlFlowVal","controlUuid","element","children","getFormListInsertData","insertContent","valList","valItem","insert","sItem","paramsName","ids","dataSourceList","v","find","m","id","keyItem","subControlUuid","control","dataProperty","showRowSelection","selectList","resultData","controlValues","setWhere","where","or","orItem","and","andItem","south","controls","right","$route","query","pageparams","table_uuid","whereParams","model_uuid","orList","str","j","andStr","i","getVal","beforeMatchType","v1","afterMatchType","v2","matchType","jsStr","eval","start","flowMap","paramsArr","next","setValue","setValueList","source","actionType","tableItem","controlTargetUuid","goNext","delayThe","th","delayNumber","delayType","num","setTimeout","initFormDetail","invokeFlow","invokeFlowNext","req","res","processId","formData","system_pb","fieldparamName","$get","fieldNameKey","fieldNameValue","globalVariableValue","params","processJsonUUid","paramsJson","response","paramsType","$postGetfile","responseType","getResponse","blob","reader","FileReader","readAsDataURL","onload","a","createElement","download","decodeURI","headers","split","href","target","result","appendChild","click","removeChild","$post","resresultType","system_returnBelong","resresult","setControlProperties","resBelongid","Next","loop","actionNext","messageTips","$message","config","top","tipsTopPosition","duration","maxCount","tipsType","content","tipsDesc","tipsTime","_th","nextList","openPage","getParams","blank","routeUrl","$router","resolve","path","pageUuid","window","open","location","origin","dialogOpen","primaryKeyUuid","primaryKeyEnName","subparamValue","drawerList","saveData","dialogClose","notifications","iconSwitch","placement","locationType","icon","$notification","message","tipsTitle","description","getFilterTableList","editObject","Object","assign","editType","pageQuery","primaryId","primaryKey","formIds","dataFormIds","setLookupValue","confirm","choiceNext","$confirm","okText","cancelText","visible","onOk","isTrue","onCancel","refreshData","controlList","dataSourceType","basetype","System_Page","then","flowresParamsName","pagination","hideControls","istemplate","template","columns","subFieldId","datalist","dataControl","dataIndex","advancedUuid","fieldId","dataSource","belong","isVarable","hasOwnProperty","multiple","Array","sessionStorage","setItem","parameList","paramName","getParamUrl","paramSource","gettableItem","cursormValue","subitem","lookupIdList","lookupId","lookupList","getLookupData","fields","current","o","re","replace","match","undefined","valueVariableList","valueVariableListObj","valueList","globalValue","optionProperty","optionSetEnName","optionUuid","optionDataId","constVal","classification","dataKey","properties","beforeDestroy","clearInterval"],"mappings":"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","sourcesContent":["export default {\n    data(){\n        return {\n            paramJson: {},\n            globalVariableList: {},\n            timer: null,\n            option: {},\n        }\n    },\n    computed:{\n        isWeb(){\n            return document.body.clientWidth >= 750\n        },\n         isH5(){\n            return  750 > document.body.clientWidth\n        },\n        customStyle(){\n            return uuid => this.isWeb ? `PC${uuid}` : `H5${uuid}`\n        },\n        classStyle() {\n            return (uuid) => {\n                const obj = {}\n                const classNames = JSON.parse(JSON.stringify(this.controlProperties[uuid].className))\n                if (this.isWeb) {\n                classNames.pcClass.reverse().forEach((item) => {\n                    obj[item] = true\n                })\n                } else {\n                classNames.mClass.reverse().forEach((item) => {\n                    obj[item] = true\n                })\n                }\n                return obj\n            }\n        },\n\n    },\n    methods: {\n        /* 校验\n         * @param {Array} list 需要校验的控件\n         */\n        validate(list = []) {\n            const validateList = this.getValidateList(this.$children).filter(item => list.includes(item.prop))\n            let flag = true\n            if(validateList.length){\n                 validateList.forEach((item) =>{\n                    if(!item.tiggerValidate()){\n                        flag = false\n                    }\n                 }\n                )\n            }\n            return flag;\n        },\n        getValidateList(list) {\n            const resultList = [];\n            list.forEach((item) => {\n                if (item.$options.name === \"validate\") {\n                    resultList.push(item);\n                }\n                if (item.$children && item.$children.length) {\n                    resultList.push(...this.getValidateList(item.$children));\n                }\n            });\n            return resultList;\n        },\n        setControlVal(val,baseType,type){\n            if(type==='Address' && baseType!=='Address'){\n               try{\n                    const value=typeof val ==='string'?JSON.parse(val):val\n                    return value.map((item) => item.name).join(\"/\");\n                }catch(e){\n                    return '';\n                }\n            };\n             if(type==='File' && baseType!=='FileUpload'){\n               try{\n                    const value=typeof val ==='string'?JSON.parse(val):val\n                    return value.map((item) => item.title).join(\"/\");\n                }catch(e){\n                    return '';\n                }\n            };\n            return val\n        },\n           async showFn(status, $scoped,uuid) {\n               const defaultFlag=status.display==='show'\n\n                console.log(status, $scoped)\n                const jude = await this.conditionJudge(status.displayCondition, null,$scoped)\n                \n                  const flag = defaultFlag ? !(jude && defaultFlag) : defaultFlag || jude\n                $scoped[`display${uuid}`] =flag\n                this.$set($scoped, { [`display${uuid}`]: flag })\n            },\n        getControlFlowVal(controlUuid, element) {\n            let value = this.controlProperties[`v${controlUuid}`].value;\n            let type = this.controlProperties[`v${controlUuid}`]?.type;\n            if (\n                type &&\n                [\n                    \"Video\",\n                    \"Audio\",\n                    \"FileUpload\",\n                ].includes(type)\n            ) {\n                value = typeof this.controlProperties[`v${controlUuid}`].value === 'string' ? JSON.parse(this.controlProperties[`v${controlUuid}`].value) : this.controlProperties[`v${controlUuid}`].value;\n            } else if (controlUuid && ['TableView', 'CardView', 'ListView', 'TableContainer', 'FormList'].includes(type)) {\n                if (element?.children?.length > 0) {\n                    //有子集\n                    if (['FormList'].includes(type)) {\n                        let list = this.getFormListInsertData(controlUuid).insertContent\n                        let valList = [];\n                        list.forEach(valItem => {\n                            const obj = {};\n                            valItem.insert.forEach(sItem => {\n                                element.children.forEach(item => {\n                                    const paramsName = item.paramsName;\n                                    obj[paramsName] = sItem.value;\n                                });\n                                valList.push(obj);\n                            })\n\n                        });\n                        value = valList;\n                    } else {\n                        const ids = this.controlProperties[`v${controlUuid}`].value;\n                        let list = this.controlProperties[`v${element.controlUuid}`].dataSourceList.filter(v => {\n                            return ids.find(m => m === v.id);\n                        });\n                        let valList = [];\n                        list.forEach(valItem => {\n                            const obj = {};\n                            element.children.forEach(item => {\n                                const keyItem = item.subControlUuid;\n                                const paramsName = item.paramsName;\n                                obj[paramsName] = valItem[keyItem];\n                            });\n                            valList.push(obj);\n                        });\n                        value = valList;\n                    }\n                } else {\n                    //无子集\n                    if (!control.dataProperty.showRowSelection) {\n                        value = this.selectList[controlUuid].resultData.map(v => v.id);\n                    } else {\n                        value = this.controlValues[controlUuid];\n                    }\n                }\n\n            }\n            return value;\n        },\n        // 设置容器条件\n        setWhere(where){\n            where.or &&\n            where.or.forEach(orItem => {\n                orItem.and &&\n                    orItem.and.forEach(andItem => {\n                        if (andItem.south === 'controlValue') {\n                            const val = this.getControlFlowVal(andItem.controls, andItem);\n                            andItem.value = val;\n                            andItem.right = val;\n                        }\n                        if (andItem.south === 'pageparams') {\n                            andItem.value = this.$route.query[andItem.pageparams[andItem.pageparams.length - 1]];\n                            andItem.right = this.$route.query[andItem.pageparams[andItem.pageparams.length - 1]];\n                        }\n                        \n                        andItem.table_uuid = andItem.table_uuid || whereParams.model_uuid;\n                        if (andItem.right === '') {\n                            \n                        }\n                    });\n            });\n        },\n        async conditionJudge(orList,globalVariableList, $scoped){\n            \t//条件判断\n\t\t\tlet str = [];\n\t\t\tfor (let j = 0; j < orList.length; j++) {\n\t\t\t\tconst orItem = orList[j];\n\t\t\t\tlet andStr = [];\n\t\t\t\tfor (let i = 0; i < orItem.and.length; i++) {\n\t\t\t\t\tconst andItem = orItem.and[i];\n\t\t\t\t\tconst v1 = await this.getVal(andItem.beforeMatchType, globalVariableList,$scoped);\n\t\t\t\t\tconst v2 = await this.getVal(andItem.afterMatchType, globalVariableList,$scoped);\n\t\t\t\t\tlet type = andItem.matchType;\n\t\t\t\t\tlet str = `'${v1}'${type}'${v2}'`;\n\t\t\t\t\tif (['>=', '>', '<=', '<'].includes(type)) {\n\t\t\t\t\t\tstr = `${v1}${type}${v2}`;\n\t\t\t\t\t}\n\t\t\t\t\tif (['includes', 'startWith', 'endsWith'].includes(type)) {\n\t\t\t\t\t\t//包含，开始，结束\n\t\t\t\t\t\tstr = `'${v1}'.${type}('${v2}')`;\n\t\t\t\t\t}\n\t\t\t\t\tif (type === '!includes') {\n\t\t\t\t\t\t//包含\n\t\t\t\t\t\tstr = `!'${v1}'.includes('${v2}')`;\n\t\t\t\t\t}\n\t\t\t\t\tif ([`==''`].includes(type)) {\n\t\t\t\t\t\t//为空\n\t\t\t\t\t\tstr = `('${v1}'==''||'${v1}'.length==0)`;\n\t\t\t\t\t}\n\t\t\t\t\tif ([`!=''`].includes(type)) {\n\t\t\t\t\t\t//不为空\n\t\t\t\t\t\tstr = `('${v1}'!=''&&'${v1}'.length>0)`;\n\t\t\t\t\t}\n\n\t\t\t\t\tandStr.push(str);\n\t\t\t\t\tconsole.log('v1=', v1, 'v2=', v2, 'andStr', andStr);\n\t\t\t\t}\n\t\t\t\tconsole.log('and', andStr);\n\t\t\t\tstr.push(andStr.join('&&'));\n\t\t\t}\n\t\t\tconst jsStr = str.join('||');\n\t\t\ttry {\n\t\t\t\treturn eval(jsStr) || false;\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log('判断出错', e);\n\t\t\t\treturn false;\n\t\t\t}\n        },\n                \n                \n                  async  start(start, flowMap, paramsArr, next){\n                            },\n                \n                \n                  async  setValue(setValue, flowMap, paramsArr, next){\n                            \n      let list = [];\n      if (setValue.list && setValue.list.length > 0) {\n        list = setValue.list;\n      } else {\n        list = setValue;\n      }\n      const setValueList = list.map((v) => {\n        const item = v;\n        item.source = item.source || item.actionType;\n        return item;\n      });\n        for (let i = 0; i < setValueList.length; i++) {\n          const item = setValueList[i]\n        const val = await this.getVal(item, paramsArr?.globalVariableList, this.tableItem);\n        this.controlProperties[`v${item.controlTargetUuid}`].value = val;\n      }\n      this.goNext(next, flowMap, paramsArr);\n},\n                \n                \n                  async  delayThe(delayThe, flowMap, paramsArr, next){\n                            \n    //延迟执行\n    const th = this;\n    const {delayNumber, delayType} = delayThe;\n    const num = delayType === 's' ? delayNumber * 1000 : delayNumber;\n    setTimeout(() => {\n        this.goNext(next, flowMap, paramsArr);\n    }, num);\n},\n                \n                \n                  async  initFormDetail(initFormDetail, flowMap, paramsArr, next){\n                            },\n                \n                async invokeFlow(invokeFlow, flowMap, paramsArr, invokeFlowNext){\n     const req = invokeFlow?.req || [];\n            const res = invokeFlow?.res;\n            const processId = invokeFlow?.processId;\n            const formData = { system_pb: {} };\n            for (var i = 0; i < req.length; i++) {\n                const element = req[i];\n                if (element.source === \"url\") {\n                    formData[element.paramsName] =\n                        this.$route.query[element.fieldparamName];\n                } else if (element.source === \"page\") {\n                    if (element.controlUuid) {\n                        if (element.subControlUuid) {\n                            formData[element.paramsName] = this.tableItem[element.subControlUuid];\n                        } else {\n                            formData[element.paramsName] = this.getControlFlowVal(element.controlUuid, element);\n                        }\n                    }\n\n                } else if (element.source === \"globalValue\") {\n                    const res =\n                        await this.$get(\"/process/v1/queryGlobalValueByKey\", {\n                            fieldNameKey: element.fieldNameKey,\n                        })\n                    formData[element.paramsName] = res.data.fieldNameValue;\n                } else if (element.source === \"globalVariableValue\") {\n                    formData[element.paramsName] = paramsArr.globalVariableList[element.globalVariableValue];\n                }\n            }\n            const params = {\n                processJsonUUid: processId,\n                paramsJson: JSON.stringify({ data: formData }),\n            };\n\n\n\n            if (res && res.length === 1 && res[0].response.length === 1 && res[0].response[0].paramsType === 'FileIo') {\n                const response = await this.$postGetfile(\n                    `/process/v1/${invokeFlow?.processId}`,\n                    params,\n                    {\n                        responseType: 'blob',\n                        getResponse: true\n                    }\n                );\n                let blob = response.data\n                let reader = new FileReader()\n                reader.readAsDataURL(blob)\n                reader.onload = (e) => {\n                    let a = document.createElement('a')\n                    a.download = decodeURI(response.headers['content-disposition'].split('filename=')[1])\n                    a.href = e.target.result\n                    document.body.appendChild(a)\n                    a.click()\n                    document.body.removeChild(a)\n                }\n                return\n            }\n\n\n            const response = await this.$post(`/process/v1/${invokeFlow?.processId}`, params);\n            const data = response.data;\n            res.map((item) => {\n                if (item.resresultType.includes(data.system_returnBelong)) {\n                    if (item.resresult === \"flowrespage\") {\n                        item.response.forEach((element) => {\n                            this.setControlProperties(element, data[element.paramsName], params, paramsArr);\n                        });\n                        if (invokeFlowNext && invokeFlowNext.length > 0) {\n                            const v = invokeFlowNext.find(\n                                (v) => v.resBelongid === data.system_returnBelong\n                            ).Next;\n                            this.loop(v, flowMap, paramsArr);\n                        }\n                    } else {\n                        this.loop(item.actionNext, flowMap, paramsArr);\n                    }\n                }\n            });\n\n},\n            \n                \n                  async  messageTips(messageTips, flowMap, paramsArr, next){\n                            \n    this.$message.config({\n        top: messageTips.tipsTopPosition || \"24px\",\n        duration: 2,\n        maxCount: 3,\n    });\n    this.$message[`${messageTips.tipsType}`]({\n        content: messageTips.tipsDesc,\n        duration: messageTips.tipsTime || 3,\n    });\n    const _th = this;\n    if (next) {\n        setTimeout(() => {\n            let nextList = [];\n            if (typeof next === 'string') {\n                nextList = [next];\n            } else {\n                nextList = next;\n            }\n            nextList.forEach(v => {\n                _th.loop(v, flowMap, paramsArr);\n            });\n        }, messageTips.tipsTime * 1000);\n    }                      \n\n},\n                openPage(openPage){\n    this.getParams(openPage);\n    if(openPage.blank) {\n         const routeUrl = this.$router.resolve({\n            path: `/page${openPage.pageUuid}`,\n            query: {\n                ...this.paramJson\n            }\n        });\n        window.open(window.location.origin + routeUrl.href, '_blank')\n    }else {\n       this.$router.push({\n            path: `/page${openPage.pageUuid}`,\n            query: {\n                ...this.paramJson\n            }\n        });\n    }\n},\n            \n                \n                  async  dialogOpen(dialogOpen, flowMap, paramsArr, next){\n                            \n      let primaryKeyUuid = '';\n      let primaryKeyEnName = '';\n      if (this.tableItem) {\n        if(dialogOpen.subparamValue) {\n            const subparamValue =  dialogOpen.subparamValue;\n            if (subparamValue) {\n              primaryKeyUuid = this.tableItem[subparamValue];\n              primaryKeyEnName = subparamValue;\n            }\n        }\n      }\n      this.drawerList.push({\n        controlUuid:`v${dialogOpen.controlUuid}`,\n        primaryKeyUuid: primaryKeyUuid,\n        tableItem: this.tableItem,\n        primaryKeyEnName: primaryKeyEnName\n      });\n\n      if (next) {\n          let nextList = [];\n          if (typeof next === \"string\") {\n              nextList = [next];\n          } else {\n              nextList = next;\n          }\n          nextList.forEach((v) => {\n              this.loop(v, flowMap, paramsArr);\n          });\n      }\n\n},\n                \n                \n                  async  saveData(saveData, flowMap, paramsArr, next){\n                            },\n                \n                \n                  async  dialogClose(dialogClose, flowMap, paramsArr, next){\n                            \n\n    const drawerList = this.drawerList.filter(v => v.controlUuid !== `v${dialogClose.controlUuid}`);\n    this.drawerList = JSON.parse(JSON.stringify(drawerList));\n    this.goNext(next, flowMap, paramsArr);\n\n},\n                \n                \n                  async  notifications(notifications, flowMap, paramsArr, next){\n                            \n    const params = notifications.iconSwitch ? {\n        placement: notifications.locationType,\n        duration: notifications.tipsTime || 3,\n        icon: notifications.iconSwitch,\n        top: notifications.tipsTopPosition || '20px'\n    }: {\n        placement: notifications.locationType,\n        duration: notifications.tipsTime || 3,\n        top: notifications.tipsTopPosition || '20px'\n    }\n    this.$notification.config(params);\n    if(notifications.iconSwitch){\n        this.$notification[notifications.tipsType]({\n            message: notifications.tipsTitle,\n            description: notifications.tipsDesc\n        });\n    }else {\n        this.$notification.open({\n            message: notifications.tipsTitle,\n            description: notifications.tipsDesc\n        });\n    }\n    const _th = this;\n    if (next) {\n        setTimeout(() => {\n            let nextList = [];\n            if (typeof next === 'string') {\n                nextList = [next];\n            } else {\n                nextList = next;\n            }\n            nextList.forEach(v => {\n                _th.loop(v, flowMap, paramsArr);\n            });\n        }, notifications.tipsTime * 1000);\n    }\n     \n},\n                \n                \n                  async  getFilterTableList(getFilterTableList, flowMap, paramsArr, next){\n                            },\n                \n                \n                  async  editObject(editObject, flowMap, paramsArr, next){\n                            \n   const params = Object.assign(\n      { actionType: editObject.editType },\n      {\n        [editObject.editType]: editObject[editObject.editType],\n      }\n    );\n    this[params.actionType](params[params.actionType]);\n\n    this.pageQuery.primaryId = this.tableItem.id;\n    this.pageQuery.primaryKey = editObject.dialogOpen.subparamValue;\n    const formIds = editObject.dialogOpen.dataFormIds;\n    formIds.forEach((v) => {\n      this[`initFormDetail${v}`](editObject.dialogOpen.subparamValue);\n    });\n    this.goNext(next, flowMap, paramsArr);\n},\n                \n                \n                  async  setLookupValue(setLookupValue, flowMap, paramsArr, next){\n                            },\n                \n                confirm(confirm, flowMap, paramsArr, choiceNext){\n    const _th = this;\n    this.$confirm({\n        title: confirm?.tipsTitle,\n        content: confirm?.tipsDesc,\n        okText: \"确认\",\n        cancelText: \"取消\",\n        visible: true,\n        onOk() {\n            const next = choiceNext?.find((v) => v.isTrue).Next;\n            next && next && _th.loop(next, flowMap, paramsArr);\n        },\n        onCancel() {\n            const next = choiceNext?.find((v) => !v.isTrue).Next;\n            next && next && _th.loop(next, flowMap, paramsArr);\n        },\n    });\n\n},\n            \n                \n                  async  refreshData(refreshData, flowMap, paramsArr, next){\n                            \n\n    refreshData?.controlList?.forEach(item => {\n        this.refreshData(item);\n        const type = this.controlProperties[`v${item}`].dataSourceType;\n        const basetype = this.controlProperties[`v${item}`].type;\n        const req = this.controlProperties[`v${item}`].req;\n        if (['Tree','TreeContainer'].includes(basetype)){\n            this[`getFilterTableList${item}`](item)\n            return \n        }\n        if(type === 'flow') {\n            let System_Page = {};\n            const paramsJson = JSON.parse(req.paramsJson);\n            paramsJson.data.System_Page = System_Page;\n            req.paramsJson = JSON.stringify(paramsJson);\n            this.$post(`/process/v1/${req.processJsonUUid}`, req).then((res) => {\n                const resultData = this[`setLookupValue${item}`](res.data[req.flowresParamsName])\n                this.controlProperties[`v${item}`].dataSourceList = resultData;\n                \n\n                this.controlProperties[`v${item}`].pagination =\n                res.data[req.flowresParamsName];\n            });\n        }else if(type === 'entity') {\n           const where = this.controlProperties[`v${item}`].whereParams;\n            this.setWhere(where.where);\n            this.$post(\"/process/v1/datagridQuery\", { data: where }).then((res) => {\n                const result = res.data.list;\n\n                this.controlProperties[`v${item}`].pagination = result.pagination ?? {};\n                \n                const resultData = this[`setLookupValue${item}`](result)\n                this.controlProperties[`v${item}`].dataSourceList = resultData;\n                this[`getFilterTableList${item}`](item);\n            });\n        }\n    });\n\n    this.goNext(next, flowMap, paramsArr);\n    \n},\n                \n                \n                  async  hideControls(hideControls, flowMap, paramsArr, next){\n                            },\n                \n            \n                 async setControlProperties(element, res, params, paramsArr) {\n                    let value = res\n                    if (element.controlUuid) {\n                    if (element.istemplate) {\n                        value = this.template(this.controlProperties[`v${element.controlUuid}`], {\n                        [element.paramsName]: data[element.paramsName],\n                        })\n                    }\n                    if (element.paramsType === 'Lookup') {\n                        const list = res.map((v) => {\n                        return v.columns\n                        })\n\n                        value = { resultData: list }\n                    }\n                    if (element.baseType && ['List', 'Lookup'].includes(element.paramsType)) {\n                        if (element.baseType === 'Tag') {\n                        if (element.paramsType === 'Lookup') {\n                            this.controlProperties[`v${element.controlUuid}`].value = value[element.subFieldId]\n                        } else {\n                            const datalist = value.resultData.map((m) => {\n                            return {\n                                columns: { ...m },\n                                uuid: m.id,\n                            }\n                            })\n                            this.controlProperties[`v${element.controlUuid}`].value = datalist\n                        }\n                        } else {\n                        if (!value.resultData) {\n                            value = { resultData: value }\n                        }\n\n                         const resultData = this[`setLookupValue${element.controlUuid}`](value)\n\n                        this.controlProperties[`v${element.controlUuid}`].dataSourceList = resultData\n\n                        }\n                    } else {\n                        if (\n                        element.baseType &&\n                        ['TableView', 'ListView', 'CardView', 'TableContainer'].includes(element.baseType) &&\n                        element.subFieldId &&\n                        this.tableItem\n                        ) {\n                        if (this.dataControl.dataIndex > -1 && this.dataControl.advancedUuid) {\n                            const fieldId = element.subFieldId\n                            if (fieldId) {\n                            this.controlProperties[`v${fieldId}`].dataSource = value\n                            return\n                            }\n                        }\n                        }\n\n                        this.controlProperties[`v${element.controlUuid}`].value = value\n                    }\n                    this.controlProperties[`v${element.controlUuid}`].req = {\n                        ...params,\n                        flowresParamsName: element.paramsName,\n                        belong: element.belong,\n                        type: 'flow',\n                    }\n                    }\n                    if (element.isVarable) {\n                    if (!paramsArr.globalVariableList) paramsArr.globalVariableList = {}\n                    paramsArr.globalVariableList[element.paramsName] = value\n                    }\n\n                    if (element.paramsType !== 'List' && element.children && element.children.length > 0) {\n                    element.children.forEach((item) => {\n                        if (res && res.hasOwnProperty(item.paramsName)) {\n                        if (\n                            item.paramsType === 'Lookup' &&\n                            !item.multiple &&\n                            res[item.paramsName] instanceof Array &&\n                            res[item.paramsName].length === 1\n                        ) {\n                            this.setControlProperties(item, res[item.paramsName][0].columns, params, paramsArr)\n                        } else {\n                            this.setControlProperties(item, res[item.paramsName], params, paramsArr)\n                        }\n                        }\n                    })\n                    }\n\n                    // 增加生成token，存储token\n                    if (element.paramsType === 'TOKEN') {\n                    sessionStorage.setItem('token', res)\n                    }\n                },\n            getParams(openPage) {\n                    this.paramJson = {};\n                    const { parameList } = openPage;\n                    parameList.forEach((item) => {\n                        if (item.paramName === '_editObjectid_') {\n                            this.paramJson['_editObjectPrimaryKey_'] =\n                            this.paramJson['_editObjectPrimaryKey_'] || item.subparamValue\n                        }\n                        this.paramJson[item.paramName] = this.getParamUrl(item)\n                    })\n                },\n                getParamUrl(item) {\n                    if (item.paramSource === 'url') {\n                        return this.$route.query[item.fieldparamName];\n                    } else if (item.subparamValue) {\n                        return this.gettableItem(item.subparamValue);\n                    } else if (item.paramSource === 'cursorm') {\n                        return item.cursormValue;\n                    } else {\n                        return this.controlProperties[`v${item.controlUuid}`].value;\n                    }\n                },\n            \n                dialogOpen(dialogOpen, flowMap, paramsArr, next){\n      let primaryKeyUuid = '';\n      let primaryKeyEnName = '';\n      if (this.tableItem) {\n        if(dialogOpen.subparamValue) {\n            const subparamValue =  dialogOpen.subparamValue;\n            if (subparamValue) {\n              primaryKeyUuid = this.tableItem[subparamValue];\n              primaryKeyEnName = subparamValue;\n            }\n        }\n      }\n      this.drawerList.push({\n        controlUuid:`v${dialogOpen.controlUuid}`,\n        primaryKeyUuid: primaryKeyUuid,\n        tableItem: this.tableItem,\n        primaryKeyEnName: primaryKeyEnName\n      });\n\n      if (next) {\n          let nextList = [];\n          if (typeof next === \"string\") {\n              nextList = [next];\n          } else {\n              nextList = next;\n          }\n          nextList.forEach((v) => {\n              this.loop(v, flowMap, paramsArr);\n          });\n      }\n\n},\n            gettableItem(subitem) {\n            return this.tableItem[subitem];\n            \n        },\n\n        /* 获取lookup数据\n\t\t * @param {Array} lookupIdList lookup数组\n\t\t * @param {Array} list 数据\n\t\t * 递归\n\t\t */\n\t\tgetLookupData(lookupIdList, list) {\n\t\t\tlet [lookupId, ...lookupList] = lookupIdList;\n\t\t\tlet result = [];\n            if(list instanceof Array)\n\t\t\tlist.map(item => {\n\t\t\t\tif (lookupList.length) {\n\t\t\t\t\tresult.push(this.getLookupData(lookupList, item.columns[lookupId]));\n\t\t\t\t} else {\n\t\t\t\t\tif (item.columns[lookupId] instanceof Object) {\n\t\t\t\t\t\tresult.push(item.columns[lookupId].fields);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.push(item.columns[lookupId]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn result.join(',');\n\t\t},\n        getLookupList(list){\n            if(list instanceof Array){\n                let result = []\n                result = list.map(item => item.uuid)\n                return result.join(',')\n            }\n          return list\n\n        },\n        loop(start, flowMap, paramsArr) {\n            let actionType = flowMap[start]?.actionType;\n            let current = flowMap[start]?.current;\n            let Next = flowMap[start]?.Next;\n            if (actionType === \"choice\") {\n                actionType &&\n                    this[actionType](\n                        paramsArr[current],\n                        flowMap,\n                        paramsArr,\n                        flowMap[start].choiceNext,\n                        paramsArr?.globalVariableList\n                    );\n            } else if (actionType === \"choose\") {\n                actionType &&\n                    this[actionType](\n                        paramsArr[current],\n                        flowMap,\n                        paramsArr,\n                        paramsArr?.globalVariableList\n                    );\n            } else if (actionType === \"confirm\") {\n                 actionType &&\n                        this[actionType](paramsArr[current], flowMap, paramsArr, flowMap[start].choiceNext);\n            } else if((actionType === 'saveData' || actionType === 'deleteObject') && current){\n                this[current]();\n                if(Next){\n                let nextList = [];\n                if (typeof Next === \"string\") {\n                    nextList = [Next];\n                } else {\n                    nextList = Next;\n                }\n                nextList.forEach((v) => {\n                    this.loop(v, flowMap, paramsArr);\n                });\n                }\n            } else if (actionType === \"invokeFlow\" ){\n                actionType && this[actionType](paramsArr[current], flowMap, paramsArr, flowMap[start]?.invokeFlowNext);\n            } else {\n                actionType && this[actionType](paramsArr[current], flowMap, paramsArr, Next);\n            }\n        },\n        template(str, o) {\n            const re = /{(.+?)}/g;\n            return str.replace(re, function (match, name) {\n                return o[name] === undefined ? `{${name}}` : o[name];\n            });\n        },\n        async getVal(obj,globalVariableList,$scoped){\n             let value = '';\n            if (obj.source === 'customSetValue') {\n                //自定义\n                if (obj.valueVariableList && obj.valueVariableList.length > 0) {\n                    if (obj.valueVariableListObj) {\n                        const val = await this.getVal(obj.valueVariableListObj, globalVariableList);\n                        return this.template(obj.value, {\n                            [obj.valueVariableList.join('/')]: val\n                        });\n                    } else {\n                        let v = obj.value;\n\n                        for (let i = 0; i < obj.valueVariableList.length; i++) {\n                            const val = await this.getVal(obj.valueVariableList[i], globalVariableList);\n                            v = this.template(v, {\n                                [obj.valueVariableList[i].valueList.join('/')]: val\n                            });\n                        }\n                        return v;\n                    }\n                }\n                return obj.value;\n            } else if (obj.source === 'controlValue') {\n                //组件\n                return this.getControlFlowVal(obj.controlUuid);\n            } else if (obj.source === 'globalValue') {\n                //环境变量\n                let res = await this.$get('/process/v1/queryGlobalValueByKey', {\n                    fieldNameKey: obj.globalValue\n                });\n                value = res.data.fieldNameValue;\n                return value;\n            } else if (obj.source === 'url' || obj.source === 'urlSetValue') {\n                //url\n                return this.$route.query[obj.pageparams] || '';\n            } else if (obj.source === 'globalVariableValue') {\n                return globalVariableList[obj.globalVariableValue]\n            } else if (obj.source === 'property' && ($scoped|| this.tableItem)) {\n                //组件属性\n                const item = $scoped||this.tableItem;\n                 if (obj.optionProperty) {\n                const data = item[obj.fieldId]\n                const valList = data.fields.map((item) => {\n                    const val = JSON.parse(item.data)\n                    return val[obj.optionProperty]\n                })\n                return valList.join('/')\n                } else {\n                return item[obj.fieldId]\n                }\n            } else if (obj.source === 'dataSet') {\n                let res = {}\n                if (this.option[obj.optionSetEnName]) {\n                res = this.option[obj.optionSetEnName]\n                } else {\n                res = await this.$get('/dam/v1/wlosOptionData/noPage/list', {\n                    optionUuid: obj.optionSetEnName,\n                })\n                this.$set(this.option, obj.optionSetEnName, res)\n                }\n                const data = res.data.map((item) => {\n                return JSON.parse(item.data)\n                })\n                return data.find((v) => obj.optionDataId === v.id)[obj.optionProperty]\n            }\n            return '';\n        },\n\n        async getValV2(constVal,$scoped){\n            if(constVal[0].classification==='controlsGroup'){\n                const controls=(constVal.find(v=>v.classification==='controls')||{}).dataKey\n                const properties=(constVal.find(v=>v.classification==='properties')||{}).dataKey\n                return this.controlProperties[`v${controls}`][properties]\n            }\n        },\n        goNext(next, flowMap, paramsArr){\n            if (next) {\n                let nextList = [];\n                if (typeof next === 'string') {\n                    nextList = [next];\n                } else {\n                    nextList = next;\n                }\n                nextList.forEach(v => {\n                    this.loop(v, flowMap, paramsArr);\n                });\n            }\n        }\n    },\n    beforeDestroy() {\n        clearInterval(this.timer)\n    }\n}\n\n"]}]}
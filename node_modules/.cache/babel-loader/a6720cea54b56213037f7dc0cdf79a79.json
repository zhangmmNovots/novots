{"remainingRequest":"/node/src/code-factory/node_modules/babel-loader/lib/index.js!/node/src/code-factory/lsrkyyezwbvy/src/mixins/permission.js","dependencies":[{"path":"/node/src/code-factory/lsrkyyezwbvy/src/mixins/permission.js","mtime":1649314958536},{"path":"/node/src/code-factory/lsrkyyezwbvy/babel.config.js","mtime":1649314958358},{"path":"/node/src/code-factory/node_modules/cache-loader/dist/cjs.js","mtime":1648824486287},{"path":"/node/src/code-factory/node_modules/babel-loader/lib/index.js","mtime":1648824338096}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ub2RlL3NyYy9jb2RlLWZhY3Rvcnkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvbm9kZS9zcmMvY29kZS1mYWN0b3J5L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyI7CmltcG9ydCB7IG1hcFN0YXRlLCBtYXBBY3Rpb25zIH0gZnJvbSAndnVleCc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHt9OwogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwU3RhdGUoWydwZXJtaXNzaW9uTGlzdCddKSksIHt9LCB7CiAgICBnZXRwZXJtaXNzaW9uOiBmdW5jdGlvbiBnZXRwZXJtaXNzaW9uKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIGZ1bmN0aW9uICh1dWlkKSB7CiAgICAgICAgaWYgKF90aGlzLnBlcm1pc3Npb25MaXN0LmluY2x1ZGVzKHV1aWQpKSB7CiAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9CgogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfTsKICAgIH0KICB9KSwKICBtZXRob2RzOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1hcEFjdGlvbnMoWydjaGFuZ2VkYXRhJ10pKSwge30sIHsKICAgIGdldEFsbFBlcm1pc3Npb246IGZ1bmN0aW9uIGdldEFsbFBlcm1pc3Npb24oKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgcmVzLCBwZXJtaXNzaW9uS2V5TGlzdDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczIuJGdldCgnL3Byb2Nlc3MvdjEvcXVlcnlHbG9iYWxWYWx1ZUJ5S2V5JywgewogICAgICAgICAgICAgICAgICBmaWVsZE5hbWVLZXk6ICdjdXJyZW50ZGF0ZScKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgcGVybWlzc2lvbktleUxpc3QgPSByZXMuZGF0YS5maWVsZE5hbWVWYWx1ZTsKCiAgICAgICAgICAgICAgICBfdGhpczIuY2hhbmdlZGF0YSh7CiAgICAgICAgICAgICAgICAgIHBlcm1pc3Npb25MaXN0OiBwZXJtaXNzaW9uS2V5TGlzdAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0KICB9KQp9Ow=="},{"version":3,"sources":["/node/src/code-factory/lsrkyyezwbvy/src/mixins/permission.js"],"names":["mapState","mapActions","data","computed","getpermission","uuid","permissionList","includes","methods","getAllPermission","$get","fieldNameKey","res","permissionKeyList","fieldNameValue","changedata"],"mappings":";;;;;AACA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,MAArC;AAEA,eAAe;AACXC,EAAAA,IADW,kBACL;AACF,WAAO,EAAP;AAGH,GALU;AAMVC,EAAAA,QAAQ,kCACNH,QAAQ,CAAC,CAAC,gBAAD,CAAD,CADF;AAETI,IAAAA,aAFS,2BAEO;AAAA;;AACd,aAAO,UAACC,IAAD,EAAU;AACf,YAAI,KAAI,CAACC,cAAL,CAAoBC,QAApB,CAA6BF,IAA7B,CAAJ,EAAwC;AACtC,iBAAO,IAAP;AACD;;AACD,eAAO,KAAP;AACD,OALD;AAMD;AATQ,IANE;AAkBXG,EAAAA,OAAO,kCACFP,UAAU,CAAC,CAAC,YAAD,CAAD,CADR;AAECQ,IAAAA,gBAFD,8BAEmB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACN,MAAI,CAACC,IAAL,CAAU,mCAAV,EAA+C;AAC/DC,kBAAAA,YAAY,EAAE;AADiD,iBAA/C,CADM;;AAAA;AAClBC,gBAAAA,GADkB;AAIlBC,gBAAAA,iBAJkB,GAIED,GAAG,CAACV,IAAJ,CAASY,cAJX;;AAKxB,gBAAA,MAAI,CAACC,UAAL,CAAgB;AAAET,kBAAAA,cAAc,EAAEO;AAAlB,iBAAhB;;AALwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMvB;AARI;AAlBI,CAAf","sourcesContent":["\nimport { mapState, mapActions } from 'vuex';\n\nexport default {\n    data(){\n        return {\n            \n        }\n    },\n     computed: {\n    ...mapState(['permissionList']),\n    getpermission() {\n      return (uuid) => {\n        if (this.permissionList.includes(uuid)) {\n          return true\n        }\n        return false\n      }\n    },\n  },\n\n    methods:{\n      ...mapActions(['changedata']),\n      async getAllPermission(){\n        let res = await this.$get('/process/v1/queryGlobalValueByKey', {\n        fieldNameKey: 'currentdate',\n      })\n      const permissionKeyList = res.data.fieldNameValue\n      this.changedata({ permissionList: permissionKeyList })\n      }\n    }\n}"]}]}